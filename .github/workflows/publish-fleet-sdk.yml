#
# This workflow is used to publish the Fleet Python SDK to PyPI.
# It is triggered by a tag push, and will only publish if the tag is valid.
# The tag must match the format fleet-python-v*.*.*
#

name: Publish Fleet Python SDK

on:
  push:
    tags:
      - "fleet-python-v*.*.*" # Trigger on version tags like fleet-python-v0.1.0, fleet-python-v1.2.3, etc.

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.set_release_tag.outputs.release_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for checking branch
      - name: Set release tag
        id: set_release_tag
        # ensure the tag is valid (matches code, is on main, etc)
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          echo "Using tag: $RELEASE_TAG"
          ./scripts/validate-release-tag.sh "$RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT

  build-and-publish:
    needs: validate
    runs-on: ubuntu-latest
    environment: pypi # Optional: use a dedicated environment for publishing
    permissions:
      id-token: write # Required for OIDC authentication
      contents: read # Required to checkout code

    env:
      RELEASE_TAG: ${{ needs.validate.outputs.release_tag }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          pip install -e .
      - name: Build package
        run: |
          python -m build
      - name: Verify package
        run: |
          twine check dist/*
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fleet-python-sdk-dist
          path: dist/
          retention-days: 5
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
